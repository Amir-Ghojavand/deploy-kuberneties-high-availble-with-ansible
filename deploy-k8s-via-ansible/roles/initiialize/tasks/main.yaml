- name: Check if Kubernetes node is already initialized
  command: kubeadm token list
  register: kubeadm_token_list
  failed_when: kubeadm_token_list.rc not in [0, 1]
  delegate_to: k8s-master-1  

- name: Abort the role if the node is already initialized
  meta: end_play
  when: kubeadm_token_list.rc == 0
  delegate_to: k8s-master-1  

- name: Copy kubeadm config file to /root
  copy:
    src: kubeadm_config
    dest: /root/kubeadm_config
    owner: root
    group: root
    mode: '0644'

- name: Initialize the cluster
  shell: kubeadm init --config=/root/kubeadm_config
  register: kubeadm_init_output
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: k8s-master-1 

- name: Display kubeadm init output
  debug:
    var: kubeadm_init_output.stdout
  delegate_to: k8s-master-1  

- name: Save kubeadm init output to a file
  shell: echo "{{ kubeadm_init_output.stdout | replace('\"', '\\\"') }}" > /root/kubeadm_init_output.txt
  delegate_to: k8s-master-1  

- name: Create .kube directory for the ansible user
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  delegate_to: k8s-master-1  

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  delegate_to: k8s-master-1  

- name: Upload certificates to get certificate key
  shell: kubeadm init phase upload-certs --upload-certs
  register: cert_upload
  delegate_to: k8s-master-1 

- name: Set certificate key fact
  set_fact:
    cert_key: "{{ cert_upload.stdout_lines[-1] }}"
  delegate_to: k8s-master-1  

- name: Generate join command for additional control plane nodes
  shell: kubeadm token create --print-join-command --certificate-key {{ cert_key }}
  register: join_command_controlplane
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: k8s-master-1 

- name: Save control plane join command
  copy:
    content: "{{ join_command_controlplane.stdout }}"
    dest: /root/kubeadm_join_controlplane_command.txt
  delegate_to: k8s-master-1 

- name: Join additional control plane nodes to the cluster
  shell: "{{ join_command_controlplane.stdout }}"
  register: join_controlplane_output
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: "{{ item }}" 
  with_items:
    - k8s-master-1
    - k8s-master-2  

- name: Generate join command for worker nodes
  shell: kubeadm token create --print-join-command
  register: join_command_worker
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: k8s-master-1  

- name: Join worker nodes to the cluster
  shell: "{{ join_command_worker.stdout }}"
  register: join_worker_output
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  delegate_to: "{{ item }}"  
  with_items:
    - k8s-worker-1
    - k8s-worker-2 
